package blorbb:qpmu;

world qpmu {
    import host: interface {
        variant spawn-error {
            not-found,
            permission-denied,
            broken-pipe,
            would-block,
            invalid-input,
            timed-out,
            write-zero,
            interrupted,
            unsupported,
            unexpected-eof,
            out-of-memory,
            other(string),
        }

        record output {
            exit-code: option<s32>,
            stdout: list<u8>,
            stderr: list<u8>,
        }

        flags capture {
            stdout,
            stderr,
        }

        spawn: func(cmd: string, args: list<string>, capture: capture) -> result<output, spawn-error>;
    }

    record list-item {
        title: string,
        description: string,
        metadata: string,
    }

    variant plugin-action {
        close,
        run-command(tuple<string, list<string>>),
        run-command-string(string),
        copy(string),
    }

    export input: func(query: string) -> list<list-item>;
    export activate: func(selected: list-item) -> list<plugin-action>;
}